heat_template_version: 2014-10-16

description: >
  Instance for proxy etcd

resources:
  random:
    type: OS::Heat::RandomString
    properties:
      length: 10
      sequence: lettersdigits

  floating:
    type: OS::Neutron::FloatingIP
    depends_on: [ port ]
    properties:
      floating_network: { get_param: floatingip_network_name }
      port_id: { get_resource: port }

  port:
    depends_on: [ random ]
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: subnet }
      security_groups: [ { get_param: security_group } ]

  instance:
    depends_on: [ port, etcd_userdata ]
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data: { get_resource: etcd_userdata }
      scheduler_hints:
        group: { get_param: anti_affinity }

  etcd_userdata:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        package_update: true
        package_upgrade: false
        packages:
         - curl
         - jq
         - tar

        write_files:
          - path: /lib/systemd/system/etcd-proxy-discovery.service
            permissions: 0644
            content:
              str_replace:
                params:
                  __discovery__: { get_param: get_discovery }
                  __discovery_proxy_bind__: { get_param: discovery_proxy_bind }
                  __instance_basename__:
                    str_replace:
                      template: bn%-rand%
                      params:
                        "bn%": { get_param: instance_basename }
                        "rand%": { get_attr: [random, value] }
                template: |
                  [Unit]
                  Description=etcd2 discovery proxy
                  Conflicts=etcd-proxy-discovery.service
                  Requires=etcd-proxy-static.service

                  [Service]
                  Type=idle
                  ExecStart=/usr/bin/etcd \
                    -name __instance_basename__ \
                    -proxy on \
                    -data-dir /var/lib/etcd2_proxy_discovery \
                    -listen-client-urls __discovery_proxy_bind__ \
                    -discovery __discovery__
                  Restart=always
                  RestartSec=10s
                  LimitNOFILE=40000
                  TimeoutStartSec=0

                  [Install]
                  WantedBy=multi-user.target

          - path: /lib/systemd/system/etcd-proxy-static.service
            permissions: 0644
            content:
              str_replace:
                params:
                  __static_endpoint__: { get_param: static_endpoint }
                  __static_proxy_bind__: { get_param: static_proxy_bind }
                  __instance_basename__:
                    str_replace:
                      template: bn%-rand%
                      params:
                        "bn%": { get_param: instance_basename }
                        "rand%": { get_attr: [random, value] }
                template: |
                  [Unit]
                  Description=etcd2 static proxy
                  Conflicts=etcd-proxy-static.service

                  [Service]
                  Type=idle
                  ExecStart=/usr/bin/etcd \
                    -name __instance_basename__ \
                    -proxy on \
                    -data-dir /var/lib/etcd2_proxy_static \
                    -listen-client-urls __static_proxy_bind__ \
                    -initial-cluster __static_endpoint__
                  Restart=always
                  RestartSec=10s
                  LimitNOFILE=40000
                  TimeoutStartSec=0

                  [Install]
                  WantedBy=multi-user.target

          - path: /lib/systemd/system/vulcand.service
            permissions: 0644
            content:
              str_replace:
                params:
                  __static_proxy_bind__: { get_param: static_proxy_bind }
                template: |
                  [Unit]
                  Description=vulcand
                  Conflicts=vulcand.service
                  Requires=etcd-proxy-discovery.service

                  [Service]
                  Type=idle
                  ExecStart=/usr/bin/vulcand \
                    -etcd=__static_proxy_bind__ \
                    -port=80
                  Restart=always
                  RestartSec=15s
                  LimitNOFILE=40000
                  TimeoutStartSec=0

                  [Install]
                  WantedBy=multi-user.target

          - path: /etc/etcd_waiting
            permissions: 0544
            content:
              str_replace:
                params:
                  __default_target__: { get_param: static_proxy_bind }
                template: |
                  #! /bin/bash

                  TARGET=$1
                  DEFAULT_TARGET=__default_target__
                  UPSERT=?prevExist=false
                  SLEEP=10

                  function check_param
                  {
                      if [ $# -ne 1 ]
                      then
                          echo "1 parameter expected TARGET: [$#] given"
                          TARGET=${DEFAULT_TARGET}
                      fi
                  }

                  function waiting_endpoint
                  {
                      for i in {0..20}
                      do
                          curl ${TARGET}
                          if [ $? -eq 0 ]
                              then
                                echo "loop ${i} -> ${TARGET} READY ret: $?"
                                return 0
                              fi
                          echo "loop ${i} -> ${TARGET} not ready ret: $?"
                          sleep ${SLEEP}
                      done
                      exit 2
                  }

                  # MAIN
                  set -x
                  check_param
                  waiting_endpoint

          - path: /etc/vulcand_rules
            permissions: 0544
            content:
              str_replace:
                params:
                  __static_proxy_bind__: { get_param: static_proxy_bind }
                  __discovery_proxy_bind__: { get_param: discovery_proxy_bind }
                template: |
                  #! /bin/bash

                  STATIC_PROXY=__static_proxy_bind__
                  DISCOVERY_PROXY=__discovery_proxy_bind__
                  UPSERT=?prevExist=false

                  set -x
                  curl -XPUT ${STATIC_PROXY}/v2/keys/vulcand/backends/b1/backend${UPSERT} \
                    -d value='{"Type": "http"}'

                  curl -XPUT ${STATIC_PROXY}/v2/keys/vulcand/backends/b1/servers/srv1${UPSERT} \
                    -d value="{\"URL\": \"${DISCOVERY_PROXY}\" }"

                  curl -XPUT ${STATIC_PROXY}/v2/keys/vulcand/frontends/f1/frontend${UPSERT} \
                    -d value='{"Type": "http", "BackendId": "b1", "Route": "PathRegexp(\"/.*\")"}'

        runcmd:
          - set -x

          # etcd install from release or object store stagging
          - mkdir /tmp/etcd_install || rm -Rf /tmp/etcd_install/*
          - [curl, -L, {get_param: insecure}, {get_param: etcd_tar}, -o, /tmp/etcd_install/etcd.tar.gz]
          - cd -P /tmp/etcd_install
          - tar -xzvf /tmp/etcd_install/etcd.tar.gz --strip-components=1
          - mv /tmp/etcd_install/etcd /usr/bin/etcd
          - mv /tmp/etcd_install/etcdctl /usr/bin/etcdctl
          - mkdir -p /var/lib/etcd2_proxy_static && mkdir -p /var/lib/etcd2_proxy_discovery

          # start proxies
          - systemctl daemon-reload
          - systemctl enable etcd-proxy-static.service && systemctl start etcd-proxy-static.service
          - systemctl enable etcd-proxy-discovery.service && systemctl start etcd-proxy-discovery.service
          - mkdir /tmp/vulcand_install || rm -Rf /tmp/vulcand_install/*

          # vulcand install from release or object store stagging
          - [curl, -L, {get_param: insecure}, {get_param: vulcand_tar}, -o, /tmp/vulcand_install/vulcand.tar.gz]
          - cd -P /tmp/vulcand_install
          - tar -xzvf /tmp/vulcand_install/vulcand.tar.gz --strip-components=1
          - mv /tmp/vulcand_install/vulcand /usr/bin/vulcand
          - mv /tmp/vulcand_install/vctl /usr/bin/vctl
          - mv /tmp/vulcand_install/vbundle /usr/bin/vbundle
          - /etc/etcd_waiting
          - /etc/vulcand_rules
          - systemctl enable vulcand.service && systemctl start vulcand.service


parameters:
  instance_basename:
    type: string

  key_name:
    type: string

  security_group:
    type: string

  network:
    type: string

  subnet:
    type: string

  image:
    type: string

  flavor:
    type: string

  insecure:
    type: string

  etcd_tar:
    type: string

  anti_affinity:
    type: string

  floatingip_network_name:
    type: string

  vulcand_tar:
    type: string

  static_endpoint:
    type: string

  get_discovery:
    type: string

  static_proxy_bind:
    type: string
    default: "http://127.0.0.1:8081"

  discovery_proxy_bind:
    type: string
    default: "http://127.0.0.1:8080"
