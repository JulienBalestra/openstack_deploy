heat_template_version: 2014-10-16

description: >
  Instance with UserData

resources:
  random:
    type: OS::Heat::RandomString
    properties:
      length: 12
      sequence: lettersdigits

  port:
    depends_on: [ random ]
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: subnet }
      security_groups: [ { get_param: security_group } ]

  instance:
    depends_on: [ port, etcd_userdata ]
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data: { get_resource: etcd_userdata }
      scheduler_hints:
        group: { get_param: anti_affinity }

  etcd_userdata:
    depends_on: [ port ]
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        package_update: true
        package_upgrade: false
        packages:
         - curl
         - jq
         - tar
        write_files:
          - path: /lib/systemd/system/etcd.service
            permissions: 0644
            content:
              str_replace:
                params:
                  __discovery__: { get_param: get_discovery }
                  __ip_address__: { get_attr: [port, fixed_ips, 0, ip_address] }
                  __instance_basename__:
                    str_replace:
                      template: bn%-rand%
                      params:
                        "bn%": { get_param: instance_basename }
                        "rand%": { get_attr: [random, value] }
                template: |
                  [Unit]
                  Description=etcd2
                  Conflicts=etcd.service

                  [Service]
                  Type=notify
                  ExecStart=/usr/bin/etcd \
                    -name __instance_basename__ \
                    -data-dir /var/lib/etcd2 \
                    -initial-advertise-peer-urls http://__ip_address__:2380 \
                    -listen-peer-urls http://__ip_address__:2380 \
                    -listen-client-urls http://__ip_address__:2379,http://127.0.0.1:2379 \
                    -advertise-client-urls http://__ip_address__:2379 \
                    -discovery __discovery__
                  Restart=always
                  RestartSec=10s
                  LimitNOFILE=40000
                  TimeoutStartSec=0

                  [Install]
                  WantedBy=multi-user.target
        runcmd:
          - set -x
          - mkdir /tmp/etcd_install || rm -Rf /tmp/etcd_install/*
          - [curl, -L, {get_param: insecure}, {get_param: etcd_tar}, -o, /tmp/etcd_install/etcd.tar.gz]
          - cd -P /tmp/etcd_install
          - tar -xzvf /tmp/etcd_install/etcd.tar.gz --strip-components=1
          - mv /tmp/etcd_install/etcd /usr/bin/etcd
          - mv /tmp/etcd_install/etcdctl /usr/bin/etcdctl
          - mkdir -p /var/lib/etcd2
          - [ curl, -s, -XPUT, {get_param: create_discovery}, -d, value=3 ]
          - systemctl daemon-reload
          - systemctl enable etcd.service
          - systemctl start etcd.service
          - systemctl status etcd.service


parameters:
  instance_basename:
    type: string
  key_name:
    type: string
  security_group:
    type: string
  network:
    type: string
  subnet:
    type: string
  image:
    type: string
  flavor:
    type: string
  insecure:
    type: string
  etcd_tar:
    type: string
  create_discovery:
    type: string
  get_discovery:
    type: string
  etcd_size:
    type: string
  anti_affinity:
    type: string