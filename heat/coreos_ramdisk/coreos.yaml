heat_template_version: 2014-10-16

description: >
  Build network, admin access requirements inside an empty tenant and deploy CoreOS Cluster

resources:
  random:
    type: OS::Heat::RandomString
    properties:
      length: 6
      sequence: lettersdigits

  public_network:
    depends_on: [ random ]
    type: OS::Neutron::Net
    properties:
      admin_state_up: True
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "public_net"
            "rand%": { get_attr: [random, value] }
      shared: False

  coreos_member_network:
    depends_on: [ random ]
    type: OS::Neutron::Net
    properties:
      admin_state_up: True
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos_member_net"
            "rand%": { get_attr: [random, value] }
      shared: False

  coreos_proxy_network:
    depends_on: [ random ]
    type: OS::Neutron::Net
    properties:
      admin_state_up: True
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos_proxy_net"
            "rand%": { get_attr: [random, value] }
      shared: False

  public_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ public_network ]
    properties:
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "public_subnet"
            "rand%": { get_attr: [random, value] }
      cidr: {get_param: public_subnet_cidr}
      network: {get_resource: public_network}
      allocation_pools: [{"start" : {get_param: public_subnet_start}, "end" : {get_param: public_subnet_end}}]
      dns_nameservers: {get_param: dns_nameservers}
      enable_dhcp: True
      gateway_ip: {get_param: public_gateway_ip}
      ip_version: 4
      host_routes:
        - destination: "0.0.0.0/0"
          nexthop: {get_param: public_gateway_ip}

  coreos_member_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ coreos_member_network ]
    properties:
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos_member_subnet"
            "rand%": { get_attr: [random, value] }
      cidr: {get_param: coreos_member_subnet_cidr}
      network: {get_resource: coreos_member_network}
      allocation_pools: [{"start" : {get_param: coreos_member_subnet_start}, "end" : {get_param: coreos_member_subnet_end}}]
      dns_nameservers: {get_param: dns_nameservers}
      enable_dhcp: True
      gateway_ip: {get_param: coreos_member_gateway_ip}
      ip_version: 4
      host_routes:
        - destination: "0.0.0.0/0"
          nexthop: {get_param: coreos_member_gateway_ip}

  coreos_proxy_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ coreos_proxy_network ]
    properties:
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos_proxy_subnet"
            "rand%": { get_attr: [random, value] }
      cidr: {get_param: coreos_proxy_subnet_cidr}
      network: {get_resource: coreos_proxy_network}
      allocation_pools: [{"start" : {get_param: coreos_proxy_subnet_start}, "end" : {get_param: coreos_proxy_subnet_end}}]
      dns_nameservers: {get_param: dns_nameservers}
      enable_dhcp: True
      gateway_ip: {get_param: coreos_proxy_gateway_ip}
      ip_version: 4
      host_routes:
        - destination: "0.0.0.0/0"
          nexthop: {get_param: coreos_proxy_gateway_ip}

  router:
    type: OS::Neutron::Router
    depends_on: [ random ]
    properties:
      name:
        str_replace:
          template: ctx%rand%-ress%
          params:
            "ctx%": {get_param: context}
            "ress%": "router"
            "rand%": { get_attr: [random, value] }
      admin_state_up: True
      external_gateway_info: {"network": {get_param: floatingip_network_name}}

  public_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ router, public_subnet ]
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: public_subnet }

  coreos_member_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ router, coreos_member_subnet ]
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: coreos_member_subnet }

  coreos_proxy_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ router, coreos_proxy_subnet ]
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: coreos_proxy_subnet }

  coreos_securitygroup:
      depends_on: [ random ]
      type: OS::Neutron::SecurityGroup
      properties:
        name:
          str_replace:
            template: ctx%ress%-rand%
            params:
              "ctx%": {get_param: context}
              "ress%": "coreos"
              "rand%": { get_attr: [random, value] }
        rules:
          - remote_ip_prefix: 0.0.0.0/0
            protocol: tcp
            port_range_min: 1
            port_range_max: 65535
            direction: ingress
          - remote_ip_prefix: 0.0.0.0/0
            protocol: udp
            port_range_min: 1
            port_range_max: 65535
            direction: ingress
          - remote_ip_prefix: 0.0.0.0/0
            protocol: icmp
            direction: ingress

  bastion_securitygroup:
      depends_on: [ random ]
      type: OS::Neutron::SecurityGroup
      properties:
        name:
          str_replace:
            template: ctx%ress%-rand%
            params:
              "ctx%": {get_param: context}
              "ress%": "bastion"
              "rand%": { get_attr: [random, value] }
        rules:
          - remote_ip_prefix: 0.0.0.0/0
            protocol: tcp
            port_range_min: 22
            port_range_max: 22
            direction: ingress
          - remote_ip_prefix: 0.0.0.0/0
            protocol: icmp
            direction: ingress

  bastion_group:
    depends_on: [ public_interface, bastion_securitygroup, bastion_userdata ]
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: bastion_size }
      resource_def:
        type: "lib::FIPInstance"
        properties:
          key_name: { get_param: key_name }
          security_group: { get_resource: bastion_securitygroup }
          network: { get_resource: public_network }
          subnet: { get_resource: public_subnet }
          userdata: { get_resource: bastion_userdata }
          flavor: { get_param: bastion_flavor }
          image: { get_param: bastion_image }
          floatingip_network_name: { get_param: floatingip_network_name }
          instance_basename:
            str_replace:
              template: ctx%rand%-ress%-%index%
              params:
                "ctx%": {get_param: context}
                "ress%": "bastion"
                "rand%": { get_attr: [random, value] }

  coreos_member_anti:
    depends_on: [ random ]
    type: OS::Nova::ServerGroup
    properties:
      name:
        str_replace:
          template: ctx%ress%-rand%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos_member"
            "rand%": { get_attr: [random, value] }
      policies: ["anti-affinity"] # Beware about the number of compute nodes

  coreos_proxy_anti:
    depends_on: [ random ]
    type: OS::Nova::ServerGroup
    properties:
      name:
        str_replace:
          template: ctx%ress%-rand%
          params:
            "ctx%": {get_param: context}
            "ress%": "coreos"
            "rand%": { get_attr: [random, value] }
      policies: ["anti-affinity"] # Beware about the number of compute nodes

  coreos_member_group:
    depends_on: [ coreos_member_interface, coreos_securitygroup, coreos_member_anti ]
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      desired_capacity: { get_param: coreos_member_size }
      max_size: 9
      rolling_updates: {"max_batch_size": 1, "min_in_service": 2, "pause_time": 60}
      resource:
        type: "lib::RAMInstance"
        properties:
          anti_affinity: { get_resource: coreos_member_anti }
          key_name: { get_param: key_name }
          security_group: { get_resource: coreos_securitygroup }
          network: { get_resource: coreos_member_network }
          subnet: { get_resource: coreos_member_subnet }
          flavor: { get_param: coreos_flavor }
          image: { get_param: coreos_image }
          floatingip_network_name: { get_param: floatingip_network_name }
          instance_basename:
            str_replace:
             template: ctx%rand%-ress%
             params:
               "ctx%": {get_param: context}
               "rand%": { get_attr: [random, value] }
               "ress%": "coreos_member"

  coreos_proxy_group:
    depends_on: [ coreos_proxy_interface, coreos_securitygroup, coreos_proxy_anti ]
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 0
      desired_capacity: { get_param: coreos_proxy_size }
      max_size: 9
      rolling_updates: {"max_batch_size": 1, "min_in_service": 2, "pause_time": 60}
      resource:
        type: "lib::RAMInstance"
        properties:
          anti_affinity: { get_resource: coreos_proxy_anti }
          key_name: { get_param: key_name }
          security_group: { get_resource: coreos_securitygroup }
          network: { get_resource: coreos_proxy_network }
          subnet: { get_resource: coreos_proxy_subnet }
          flavor: { get_param: coreos_flavor }
          image: { get_param: coreos_image }
          floatingip_network_name: { get_param: floatingip_network_name }
          instance_basename:
            str_replace:
             template: ctx%rand%-ress%
             params:
               "ctx%": {get_param: context}
               "rand%": { get_attr: [random, value] }
               "ress%": "coreos_proxy"

  scale_up_member:
    depends_on: [ coreos_member_group ]
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: coreos_member_group}
      cooldown: 30
      scaling_adjustment: 1

  scale_down_member:
    depends_on: [ coreos_member_group ]
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: coreos_member_group}
      cooldown: 30
      scaling_adjustment: -1

  scale_up_proxy:
    depends_on: [ coreos_proxy_group ]
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: coreos_proxy_group}
      cooldown: 30
      scaling_adjustment: 1

  scale_down_proxy:
    depends_on: [ coreos_proxy_group ]
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: coreos_proxy_group}
      cooldown: 30
      scaling_adjustment: -1

  bastion_userdata:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        runcmd:
          - [ echo, "hello_world" ]

parameters:
  context:
    type: string
    default: ""
  key_name:
    type: string
    label: Name of keypair to assign to servers
    description: key_name=foo

  coreos_member_subnet_cidr:
    type: string
    default: "192.168.2.0/24"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}"
        description: Must be a CIDR like 192.168.1.0/24

  coreos_member_subnet_start:
    type: string
    default: "192.168.2.100"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  coreos_member_subnet_end:
    type: string
    default: "192.168.2.200"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  coreos_proxy_subnet_cidr:
    type: string
    default: "192.168.1.0/24"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}"
        description: Must be a CIDR like 192.168.1.0/24

  coreos_proxy_subnet_start:
    type: string
    default: "192.168.1.100"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  coreos_proxy_subnet_end:
    type: string
    default: "192.168.1.200"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  public_subnet_cidr:
    type: string
    default: "192.168.0.0/24"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/[0-9]{1,2}"
        description: Must be a CIDR like 192.168.1.0/24

  public_subnet_start:
    type: string
    default: "192.168.0.100"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  public_subnet_end:
    type: string
    default: "192.168.0.200"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  public_gateway_ip:
    type: string
    default: "192.168.0.254"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  coreos_member_gateway_ip:
    type: string
    default: "192.168.2.254"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  coreos_proxy_gateway_ip:
    type: string
    default: "192.168.1.254"
    constraints:
      - allowed_pattern: "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}"
        description: Must be a valid IP address like 192.168.1.200

  dns_nameservers:
    type: comma_delimited_list
    label: DNS nameservers
    description: dns_nameservers=8.8.8.8,8.8.4.4

  floatingip_network_name:
    type: string
    label: The Floating IP network for NAT
    description: floatingip_network_name=public

  coreos_flavor:
    type: string
    label: The flavor for Instances
    description: flavor=m1.medium
  bastion_flavor:
    type: string
    label: The flavor for Instances
    description: flavor=m1.medium
  coreos_image:
    type: string
    label: The debian image based for Instances
    description: image=debian-8-2016-01-01
  bastion_image:
    type: string
    label: The debian image based for Instances
    description: image=debian-8-2016-01-01

  coreos_member_size:
    type: number
    default: 3
    constraints:
    - type: Choice
      values:
      - 1
      - 3
      - 5
      - 9
    constraints:
      - range: { min: 1 }

  coreos_proxy_size:
    type: number
    default: 0

  bastion_size:
    type: number
    default: 0
    constraints:
      - range: { min: 0, max: 2 }

outputs:
  scale_up_member:
    value:
      - {get_attr: [scale_up_member, alarm_url]}
  scale_down:
    value:
      - {get_attr: [scale_down_member, alarm_url]}
  scale_up_member:
    value:
      - {get_attr: [scale_up_proxy, alarm_url]}
  scale_down:
    value:
      - {get_attr: [scale_down_proxy, alarm_url]}
  base_name:
    description: Random value used to tag stack resources
    value:
      - { get_attr: [random, value] }