heat_template_version: 2014-10-16

description: >
  HAProxy Instance

resources:
  random:
    type: OS::Heat::RandomString
    properties:
      length: 10
      sequence: lettersdigits

  pywatcher:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        runcmd:
          - apt-get update -qq
          - apt-get upgrade -y
          - apt-get install -y curl python python-dev haproxy
          - cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy_base.cfg
          - echo [] > /etc/haproxy/servers.json
          - [ mkdir, -p, /usr/local/src/haproxy ]
          - [ curl, { get_param: insecure }, { get_param: watcher_link }, -o, /usr/local/src/haproxy/watcher.py ]
          - [ chmod, 755, /usr/local/src/haproxy/watcher.py ]
          - /usr/local/src/haproxy/watcher.py
          # Maybe add a crontab

  multipart:
    depends_on: [ pywatcher ]
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: { get_resource: pywatcher }

  port:
    depends_on: [ random ]
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      network_id: { get_param: network }
      fixed_ips: [{ "subnet_id": { get_param: subnet } }]
      security_groups: [ { get_param: security_group } ]

  instance:
    depends_on: [ port, multipart ]
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: bn%-rand%
          params:
            "bn%": { get_param: instance_basename }
            "rand%": { get_attr: [random, value] }
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: port }
      metadata:
        autoscaling_networks: { get_param: autoscaling_networks }
      user_data_format: RAW
      user_data: { get_resource: multipart }

parameters:
  instance_basename:
    type: string
  key_name:
    type: string
  security_group:
    type: string
  network:
    type: string
  subnet:
    type: string
  image:
    type: string
  flavor:
    type: string
  autoscaling_networks:
    type: comma_delimited_list
  watcher_link:
    type: string
    description: URL for Python Watcher
  insecure:
    type: string
    description: Warning if you use that
    default: "--insecure"